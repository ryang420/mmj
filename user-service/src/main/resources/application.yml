# Spring properties
spring:
  application:
    name: user-service  # Service registers under this name
  messages:
    fallback-to-system-locale: false
  cloud:
    config:
      uri: http://localhost:8888
      fail-fast: false
      label: master

app:
  greet:
    msg: Hello Microservice!

user:
  firstName: abc
  lastName: 123

management:
  endpoints:
    web:
      exposure:
        include: refresh

# Discovery Server Access
eureka:
  instance:
    leaseRenewalIntervalInSeconds: 3
    leaseExpirationDurationInSeconds: 2
    metadataMap:
      instanceId: ${vcap.application.instance_id:${spring.application.name}:${spring.application.instance_id:${random.value}}}

  client:
    registryFetchIntervalSeconds: 5
    instanceInfoReplicationIntervalSeconds: 5
    initialInstanceInfoReplicationIntervalSeconds: 5
    serviceUrl:
      defaultZone: ${vcap.services.${PREFIX:}eureka.credentials.uri:http://user:password@localhost:8761}/eureka/
    fetchRegistry: true

# HTTP Server
server:
  port: 2224   # HTTP (Tomcat) port


---
#docker env
spring:
  application:
    name: user-service  # Service registers under this name
  profiles: docker
  messages:
    fallback-to-system-locale: false
  cloud:
    config:
      uri: http://config:8888
      fail-fast: false
      label: master
  zipkin:
    base-url: http://zipkin:9411
    discovery-client-enabled: false
    sender:
      type: web
  sleuth:
    sampler:
      probability: 1

server:
  port: 8080

eureka:
  instance:
    preferIpAddress: true
    leaseRenewalIntervalInSeconds: 1
    leaseExpirationDurationInSeconds: 2
  client:
    registryFetchIntervalSeconds: 5
    instanceInfoReplicationIntervalSeconds: 5
    initialInstanceInfoReplicationIntervalSeconds: 5
    serviceUrl:
      defaultZone: http://eureka:8761/eureka/
      fetchRegistry: true
      healthcheck:
        enabled: true
